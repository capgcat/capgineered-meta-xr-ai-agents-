sources:
  bigquery_connection:
    kind: "bigquery"
    project: "hacker2025-team-63-dev"
tools:
  insert_device_reading_tool:
    kind: bigquery-sql
    source: bigquery_connection
    description: |
      Inserts a device reading record into the device_readings.realtime table.
      For optional fields not provided, the calling agent should pass NULL.
    parameters:
      - name: machine_id
        type: string
        description: "Identifier for the machine."
      - name: time_series_id
        type: string
        description: "Identifier for the time series (e.g., device ID)."
      - name: timestamp
        type: string # Changed from timestamp to string
        description: "The timestamp of the reading."
      - name: target_value
        type: float
        description: "The target value measured by the device."
      - name: temperature_unit
        type: string
        description: "Unit of temperature (e.g., Celsius, Fahrenheit). Optional."
      - name: humidity
        type: float
        description: "Humidity reading. Optional."
      - name: battery_level
        type: float
        description: "Battery level of the device. Optional."
      - name: location
        type: string
        description: "Location of the device. Optional."
      - name: status
        type: string
        description: "Status of the device. Optional."
      - name: received_at 
        type: string # Changed from timestamp to string
        description: "Timestamp when the record was received by the system. Optional."
      - name: metadata
        type: string # Changed from json to string
        description: "Additional metadata as a JSON formatted string. Optional."
      - name: image_desc_generation_output # Assuming MCP 'text' type maps to BQ STRING
        type: string
        description: "Generated description of the image. Optional."
      - name: image_url # Assuming MCP 'image' type maps to BQ STRING
        type: string
        description: "URL of the image associated with the reading. Optional."
    statement: |
      INSERT INTO `hacker2025-team-63-dev.device_readings.realtime_sensor` (
        machine_id, time_series_id, timestamp, target_value, temperature_unit,
        humidity, battery_level, location, status, received_at, metadata,
        image_desc_generation_output, image_url
      ) VALUES (
        @machine_id, @time_series_id, @timestamp, @target_value, @temperature_unit,
        @humidity, @battery_level, @location, @status, @received_at,
        PARSE_JSON(@metadata), @image_desc_generation_output, @image_url
      );
  query_average_temperature:
    kind: bigquery-sql
    source: bigquery_connection
    description: |
      Queries the average temperature from the device_readings.realtime_sensor table.
      This tool is useful for analyzing temperature trends over time.
    parameters:
      - name: start_date
        type: string
        description: "Start date for the query in 'YYYY-MM-DD' format."
      - name: end_date
        type: string
        description: "End date for the query in 'YYYY-MM-DD' format."
    statement: |
      SELECT
        AVG(target_value) AS average_temperature
      FROM
        `hacker2025-team-63-dev.device_readings.realtime_sensor`
      WHERE
        temperature_unit = 'Celsius' AND
        timestamp BETWEEN @start_date AND @end_date;
  anomaly_insights_by_type:
      kind: bigquery-sql
      source: bigquery_connection
      description: |
        Retrieves all anomaly insights filtered by a specific observation type.
        If a user asks about 'sensor data type' or 'sensor data', consider it the same as 'observation_type'.
      parameters:
        - name: observation_type
          type: string
          description: "The type of observation to filter anomalies by (e.g., 'temperature_reading', 'pressure_reading'). This parameter is required."
      statement: |
        SELECT
          *
        FROM
          machine_telemetry.raw_observations
        WHERE
          observation_type = @observation_type;
  anomaly_insights_all:
    kind: bigquery-sql
    source: bigquery_connection
    description: |
      Retrieves all anomaly insights without applying any observation type filter.
      Useful for general queries like 'list all anomalies' or 'show complete anomaly data'.
    statement: |
      SELECT
        *
      FROM
        machine_telemetry.raw_observations;
toolsets:
  iot_device_toolset: # Optional: grouping the new tool
    - insert_device_reading_tool
  anomaly_toolset:
    - query_average_temperature
    - anomaly_insights_by_type
    - anomaly_insights_all
